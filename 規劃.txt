翻牌遊戲

mvp 版：
記憶自己指定牌的圖樣，先翻到自己的三張牌便勝出
與機器人比賽

升級版：雙人比賽

遊戲流程

-- 遊戲前準備 --

- 開場

1. 一共有機器人與玩家兩位選手
2. 展示所有牌面 1~6 號（6 種）
3. 蓋上牌面
4. 打亂順序

- 選牌

1. 玩家/機器人 各選一張牌
2. 將選中的牌 強調（+class）並顯示選中牌面
3. 選手們選擇的牌面不能重複

-- 遊戲開始 --

- 記憶

1. 總共有 18 張牌，每種牌面有 3 張（總共有 6 種）
2. 1 排 6 個，一共 3 排
3. 顯示 3 秒所有牌的順序
4. 3 秒後牌面蓋上

- 比賽開始

1. 選手們同時根據記憶選擇牌面位置
2. 最先找到自己的 三個牌面 的選手勝出

- 點選牌面

1. 牌面顯示
2. 是否為該玩家選中的牌面
   是 → 牌面維持
   否 → 牌面蓋上

- 機器人聰明程度

1. 簡單模擬記憶力：
   a. 記憶全部牌面
   b. 設定上相似的牌面有機率記錯
   c. 記錯的牌面翻開後會更新為正確的
   d. 依「記憶」隨機翻牌

2. 翻牌速度：
   ??（未決定救救我）

--遊戲結束--

1. 顯示每位選手的本次遊戲時長
2. 顯示 用時時長 最短的選手（勝者）
3. 顯示 勝者 本次遊戲時間多長
4. 出現「再玩一次」

變數清單：

==============================
全域變數（整份程式可用）
==============================

card_types → 六種牌面（數字 0 ～ 5）
cards → 儲存遊戲中的卡片 DOM 元素
player_target → 玩家選擇的目標牌面
bot_target → 機器人選擇的目標牌面
player_hit → 玩家目前翻對的張數
start_time → 遊戲開始時間（毫秒）
game_end → 是否已結束（布林值）
bot_next_target → 玩家翻過的機器人目標牌，下輪優先翻

==============================
wash_game_card(array) 洗牌函式
==============================

i → 倒數迴圈的索引值
x → 隨機選的索引位置，用來交換位置

==============================
render_choice_ui() 開場選牌畫面
==============================

after_wash_card → 洗牌後的選項順序陣列
type → 每張牌的數值（forEach 中）
img → 建立的圖片 DOM 元素

> 巢狀：img.on("click")

---

other_card → 剩下未被選的牌（給機器人隨機挑）

==============================
start_game() 開始遊戲
==============================

need_wash_card → 各牌種各三張，共 18 張
after_wash_play_card → 洗牌後的 18 張
type → 各卡牌的類型
card → 建立的卡片 DOM 元素

==============================
play_game() 主遊戲邏輯
==============================

bot_memory → 機器人的記憶庫（含誤記邏輯）
bot_hits → 機器人目前翻對的數量
bot_idx → 掃描記憶庫時用的 index 游標
bot_play_game → setInterval 控制器（每 1.2 秒翻一次牌）

> 巢狀：$(".card").on("click")

---

type → 玩家點擊的這張牌的 type
this → jQuery 事件對象
m → 記憶庫中逐一對應的卡片記憶物件

> 巢狀：function bot_action()

---

card → 這輪機器人要翻的牌
candidate → 記憶中選出來的可能目標（在 while 中）
unknown_cards → 機器人亂猜的備用牌（未翻 + 未試）

==============================
🔁 $("#restart").on("click") 重玩
==============================

（無區域變數，僅操作 DOM 與重置全域變數）

==============================
end_game(winner) 顯示勝負
==============================

time_used → 經過秒數（用來顯示時間花費）

==============================
附錄：bot_memory 結構
==============================

{
true_type: 實際牌面類型
memory_type: 機器人記憶的類型（可能錯）
element: 對應的 DOM 元素
has_tried: 是否已經嘗試過翻這張牌
}
